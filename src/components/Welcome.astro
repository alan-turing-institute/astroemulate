---
import logo from "../assets/autoemulate_logo_blank.png";
import logo_no_grid from "../assets/autoemulate_logo_no_grid.png";
import reality from "../assets/reality.jpg";
import background from "../assets/background.svg";
import simulation from "../assets/simulation.png";
import GP from "../assets/GP.png";
import classical from "../assets/classical.png";
import ml from "../assets/ml.svg";
import dl from "../assets/dl.svg";
import code from "../assets/code.svg";
import domain from "../assets/domain.svg";
import integration from "../assets/integration.svg";
import "../styles/global.css";
import { Code } from "astro:components";
import { Content as QuickStartCode } from "./quick-start-code.md";
---

<head>
	<title>Welcome to AutoEmulate</title>
</head>

<div id="container">
	<img id="background" src={background.src} alt="" fetchpriority="high" />
	<main>
		<nav class="navbar" id="navbar">
			<img src={logo.src} width="100" alt="AutoEmulate Logo" />
			<sub class="navbar-logo-text"><b>utoEmulate</b></sub>
			<div class="navbar-right">
				<a
					href="https://alan-turing-institute.github.io/autoemulate/index.html"
					target="_blank">Documentation</a
				>
				<a
					href="https://github.com/alan-turing-institute/autoemulate"
					target="_blank">GitHub</a
				>
				<a
					href="https://alan-turing-institute.github.io/gp-demo/"
					target="_blank">What is emulation?</a
				>
			</div>
		</nav>
		<div class="intro">
			<h1>Accelerating large-scale simulations with AI.</h1>
			<h2>Replace complex simulations with fast, accurate emulators.</h2>
			<section id="links">
				<a
					class="button"
					href="https://alan-turing-institute.github.io/autoemulate/index.html"
					target="_blank"
					>Get started
				</a>
			</section>
		</div>
		<div class="hero">
			<div class="panel-left">
				<img
					style="text-align: left;"
					width="35%"
					src={logo_no_grid.src}
					alt="AutoEmulate Logo"
				/>
				<h3>
					<i>AutoEmulate</i> is a Python library for automatically creating
					accurate and efficient emulators of complex simulations.
					<br /><br />
					Run a complete machine learning pipeline to compare and optimise
					a wide range of models, with functions for downstream tasks like
					prediction, sensitivity analysis and calibration.
				</h3>
			</div>
			<div class="panel-left benefits">
				<div class="benefit">
					<img src={classical.src} alt="Classical Icon" width="50" />
					<h3>Classical</h3>
					<p>
						Radial Basis Functions<br />
						Second Order Polynomials
					</p>
				</div>
				<div class="benefit">
					<img
						src={ml.src}
						alt="ML Icon"
						width="50"
					/>
					<h3>Machine Learning</h3>
					<p>
						Random Forests<br />
						Gradient Boosting<br />
						Support Vector Machines<br />
						LightGBM
					</p>
				</div>
				<div class="benefit">
					<img
						src={dl.src}
						alt="DL Icon"
						width="50"
					/>
					<h3>Deep Learning</h3>
					<p>
						Multi-output / Multi-task Gaussian Processes<br />
						Conditional Neural Processes
					</p>
				</div>
			</div>
			<div class="seondary-intro">
				<h1>State of the art emulators</h1>
			</div>
			<div class="panel-left">
				<h3 class="left-text">
					The computational cost of simulating complex systems poses a
					significant <i>bottleneck</i>.
				</h3>
				<img width="40%" src={reality.src} alt="Reality Image" />
				<br />
			</div>
			<div class="panel-right">
				<img
					width="25%"
					src={simulation.src}
					alt="Simulation Exmaple Image"
				/>
				<br />
				<div style="width: 10%;"></div>
				<h3 class="right-text">
					<br />
					<br />
					Simulation models are becoming <i>increasingly</i> complex.
					<br />
					<br />
					These models can take <i>hours</i>, or even <i>days</i> to run.
				</h3>
			</div>
			<div class="seondary-intro">
				<h1><br />Open source & free to use</h1>
			</div>
			<div class="panel-left benefits">
				<div class="benefit">
					<img src={code.src} alt="Low-Code Icon" width="50" />
					<h3>Low code</h3>
					<p>
						Data-processing, model comparison, cross-validation,
						hyperparameter search and more in few lines of code.
					</p>
				</div>
				<div class="benefit">
					<img
						src={domain.src}
						alt="Domain Agnostic Icon"
						width="50"
					/>
					<h3>Domain agnostic</h3>
					<p>Can be applied to simulation models from any domain.</p>
				</div>
				<div class="benefit">
					<img
						src={integration.src}
						alt="Easy Integration Icon"
						width="50"
					/>
					<h3>Easy Integration</h3>
					<p>
						All emulators are compatible with commonly used Python
						ML frameworks, making them easy to integrate into
						downstream applications.
					</p>
				</div>
			</div>
			<div class="panel-left">
				<h3 class="left-text">
					<i>AutoEmulate</i> produces <i>accurate</i> stand-ins for simulation
					models that are <i>faster</i> to run.
					<br />
					<br />
					Emulation can be applied to <i>any</i> simulation model.
				</h3>
				<img width="40%" src={GP.src} alt="Gaussian Process Image" />
			</div>
			<div class="quick-install">
				<h4>
					Quick install <Code
						code={`pip install autoemulate`}
						lang="python"
					/>
				</h4>
			</div>
			<div class="quick-start">
				<h2>Find the best emulator in a just a few lines of code...</h2>
				<div class="quick-start-code">
					<QuickStartCode />
				</div>
			</div>
		</div>
	</main>
</div>

<script>
	window.addEventListener("scroll", function () {
		const navbar = document.getElementById("navbar");
		if (window.scrollY > window.innerHeight / 2) {
			navbar.classList.add("hidden");
		} else {
			navbar.classList.remove("hidden");
		}
	});
</script>
