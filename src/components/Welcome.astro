---
import logo from "../assets/autoemulate_logo.png";
import heart from "../assets/heart.png";
import background from "../assets/background.svg";
import quantum from "../assets/quantum.gif";
import engine from "../assets/engine.jpg";
import "../styles/global.css";
---

<div id="container">
	<img id="background" src={background.src} alt="" fetchpriority="high" />
	<main>
		<nav class="navbar">
			<img src={logo.src} width="150" alt="AutoEmulate Logo" />
		</nav>
		<div class="intro">
			<h1>Accelerating large-scale simulations with AI.</h1>
			<h2>Replace complex simulations with fast, accurate emulators.</h2>
			<section id="links">
				<a
					class="button"
					href="https://alan-turing-institute.github.io/autoemulate/index.html"
					>Read our docs</a
				>
			</section><br />
		</div>
		<div class="hero">
			<div class="panel">
				<img
					style="text-align: left;"
					width="35%"
					src={logo.src}
					alt="AutoEmulate Logo"
				/>
				<p class="right-text">
					<b>Introducing <i>AutoEmulate</i></b><br />
					<i>AutoEmulate</i> is a Python library that makes it easy to
					create accurate and efficient emulators for complex simulations.
					<br />
					Automatically fit and compare various emulators, ranging from
					simple models like Radial Basis Functions and Second Order Polynomials
					to more complex models like Support Vector Machines, Gaussian
					Processes and Conditional Neural Processes.
					<br />
					Under the hood, the package runs a complete machine learning
					pipeline to compare and optimise a wide range of models, and
					provides functions for downstream tasks like prediction, sensitivity
					analysis and calibration.
				</p><br /><br />
			</div>
			<div class="panel">
				<p class="left-text">
					<b>Why emulators?</b><br />
					For complex systems research, the computational cost of simulation
					poses a significant bottleneck.
					<br />
					Simulation models and the tasks required of them are becoming
					increasingly complex.
					<br />
					These models can take hours, or even days to run.
					<br />
					Emulation is a technique that can create a fast, accurate approximation
					of a simulation model.
					<br />
					Emulation is domain agnostic and can be applied to any simulation
					model.
				</p>
				<img
					style="text-align: right;"
					width="10%"
					src={heart.src}
					alt="Heart Image"
				/>
				<img
					style="text-align: right;"
					width="10%"
					src={quantum.src}
					alt="Ab Initio Quantum simulations Image"
				/>
				<img
					style="text-align: right;"
					width="10%"
					src={engine.src}
					alt="Air flow in a single stage of an aero-engine Image"
				/>
				<br />
			</div>
			<div class="panel">
				<h3>Benefits</h3>
				<p>
					Low-Code: Data-processing, model comparison, cross-validation, hyperparameter search and more in few lines of code
					Domain agnostic: Can be applied to simulation models from any domain
					Easy Integration: All emulators are compatible with commonly used Python ML frameworks, making them easy to integrate into Downstream Applications
				</p>
			</div>
		</div>

		<style></style>
	</main>
</div>
